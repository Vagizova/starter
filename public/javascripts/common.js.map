{"version":3,"sources":["common.js"],"names":["$","getCards","ajax","url","type","done","cards","cardsPagesCount","assignId","cardsArray","length","concat","cardsLoader","masonry","masonryConfig","isMasonryCreated","newCards","map","card","createCard","append","lastIndex","index","id","heightCoefficient","imgHeight","imgWidth","img","name","get","itemSelector","columnWidth","percentPosition","gutter","slickConfig","dots","arrows","infinite","vertical","speed","fade","cssEase","animate","scrollTop","height","slick","click","window","on","event","container","currentSlide","target","parents","currentContent","find","isScrolledUp","parseInt","originalEvent","wheelDelta","detail","currentSlideIdx","heightDelta","Math","floor","topOffset","offset","top","document","addClass","removeClass"],"mappings":"AAAA,YAAAA,GAAE,WA0DE,QAASC,KACLD,EAAEE,MACEC,IAAK,gCACLC,KAAM,QACPC,KAAK,SAACC,GAKL,GAHAC,IACAD,EAAQE,EAASF,EAAOG,EAAWC,QACnCD,EAAaA,EAAWE,OAAOL,GAC3BA,EAAMI,OAAS,EAAG,CAClBE,EAAcZ,EAAE,mBAAmBa,QAAQC,GAC3CC,GAAmB,CACnB,IAAIC,GAAYV,EAAMW,IAAI,SAACC,GACvB,MAAOC,GAAWD,IAEtBN,GAAYQ,OAAOJ,GAAUH,QAAQ,WAAYG,GAAUH,QAAQ,mBAE/DE,KACAH,EAAYC,QAAQ,WACpBE,GAAmB,KAMnC,QAASP,GAASF,EAAOe,GACrB,MAAOf,GAAMW,IAAI,SAACC,EAAMI,GAEpB,MADAJ,GAAKK,GAAK,SAAWF,EAAYC,EAAQ,GAClCJ,IAIf,QAASC,GAAWD,GAChB,GAAIM,GAAoBN,EAAKO,UAAYP,EAAKQ,QAC9C,OAAO1B,GACH,2BAA2BkB,EAAKK,GAAhC,gCAAA,gCAEgCL,EAAKS,IAFrC,QAAA,yCAAA,wBAKuBH,EAAoB,IAAMA,EAAoB,IAAM,QAL3E,mBAAA,qCAAA,6BAO6BN,EAAKU,KAPlC,uBAQFC,IAAI,GApGV,GAAId,IAAmB,EACnBH,EAAAA,OACAH,KACAK,GACAgB,aAAc,UACdC,YAAa,iBACbC,iBAAiB,EACjBC,OAAQ,mBAERC,GACAC,MAAM,EACNC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,MAAO,IACPC,MAAM,EACNC,QAAS,UAETlC,EAAkB,CAEtBP,GAAE,QAAQ0C,SACNC,UAAW3C,EAAE,aAAa4C,UAC3B,KAEH5C,EAAE,wBAAwB6C,MAAMX,GAChCjC,IACAD,EAAE,eAAe8C,MAAM7C,GAEvBD,EAAE+C,QAAQC,GAAG,gDAAiD,SAACC,GAC3D,GAAIC,GAAYlD,EAAE,wBACdmD,EAAenD,EAAEiD,EAAMG,QAAQC,QAAQ,cACvCC,EAAiBH,EAAaI,KAAK,uBACnCC,EAAeC,SAASR,EAAMS,cAAcC,aAAeV,EAAMS,cAAcE,SAAW,CAC9F,IAAIJ,GACA,GAA4D,GAAxDL,EAAaI,KAAK,uBAAuBZ,aACrCQ,EAAa7B,QAAU,EAAG,CAC1B,GAAIuC,GAAkBX,EAAUL,MAAM,oBACtCK,GAAUL,MAAM,YAAagB,EAAkB,QAGpD,CACH,GAAIC,GAAcC,KAAKC,MAAMV,EAAeV,SAAWO,EAAaP,UAChEqB,EAAYd,EAAae,SAASC,IAAMnE,EAAEoE,UAAUzB,WACxD,IAAIsB,EAAY,EACZd,EAAakB,SAAS,sBAGtB,IADAlB,EAAamB,YAAY,mBACrBR,GAAeX,EAAaI,KAAK,mBAAmBZ,aAAemB,EAAc,IAC7EX,EAAa7B,QAAUtB,EAAE,cAAcU,OAAQ,CAC/C,GAAImD,GAAkBX,EAAUL,MAAM,oBACtCK,GAAUL,MAAM,YAAagB,EAAkB","file":"../sources/common.js","sourcesContent":["$(function () {\n    let isMasonryCreated = false;\n    let cardsLoader;\n    let cardsArray = [];\n    let masonryConfig = {\n        itemSelector: '.c-card',\n        columnWidth: '.c-card__sizer',\n        percentPosition: true,\n        gutter: '.c-card__gutter'\n    };\n    let slickConfig = {\n        dots: false,\n        arrows: false,\n        infinite: false,\n        vertical: false,\n        speed: 800,\n        fade: true,\n        cssEase: 'linear'\n    };\n    let cardsPagesCount = 1;\n\n    $('body').animate({\n        scrollTop: $('.c-header').height()\n    }, 500);\n    \n    $('.c-section-container').slick(slickConfig);\n    getCards();\n    $('#more-cards').click(getCards);\n\n    $(window).on('mousewheel DOMMouseScroll MozMousePixelScroll', (event) => {\n        let container = $('.c-section-container');\n        let currentSlide = $(event.target).parents('.c-section');\n        let currentContent = currentSlide.find('.c-section__content');\n        let isScrolledUp = parseInt(event.originalEvent.wheelDelta || -event.originalEvent.detail) >= 0;\n        if (isScrolledUp) {\n            if (currentSlide.find('.c-section__content').scrollTop() == 0) {\n                if (currentSlide.index() > 0) {\n                    let currentSlideIdx = container.slick('slickCurrentSlide');\n                    container.slick('slickGoTo', currentSlideIdx - 1);\n                }\n            }\n        } else {\n            let heightDelta = Math.floor(currentContent.height() - currentSlide.height());\n            let topOffset = currentSlide.offset().top - $(document).scrollTop();\n            if (topOffset > 0) {\n                currentSlide.addClass('prevent-scroll');\n            } else {\n                currentSlide.removeClass('prevent-scroll');\n                if (heightDelta <= currentSlide.find('.c-section__box').scrollTop() || heightDelta < 0) {\n                    if (currentSlide.index() < $('.c-section').length) {\n                        let currentSlideIdx = container.slick('slickCurrentSlide');\n                        container.slick('slickGoTo', currentSlideIdx + 1);\n                    }\n                }\n            }\n        }\n    });\n\n    function getCards() {\n        $.ajax({\n            url: 'http://10.66.80.80:3000/cards',\n            type: 'GET'\n        }).done((cards) => {\n            \n            cardsPagesCount++;\n            cards = assignId(cards, cardsArray.length);\n            cardsArray = cardsArray.concat(cards);\n            if (cards.length > 0) {\n                cardsLoader = $('.c-cards-holder').masonry(masonryConfig);\n                isMasonryCreated = true;\n                let newCards =  cards.map((card) => {\n                    return createCard(card);\n                });\n                cardsLoader.append(newCards).masonry('appended', newCards).masonry('reloadItems');\n            } else {\n                if (isMasonryCreated) {\n                    cardsLoader.masonry('destroy');\n                    isMasonryCreated = false;\n                }\n            }\n        })\n    }\n\n    function assignId(cards, lastIndex) {\n        return cards.map((card, index) => {\n            card.id = 'card-' + (lastIndex + index + 1);\n            return card;\n        })\n    }\n\n    function createCard(card) {\n        let heightCoefficient = card.imgHeight / card.imgWidth;\n        return $(\n            `<div class='c-card' id='${card.id}'>` +\n            `<div class='c-card__image'` +\n            `style='background-image: url(${card.img});'>` +\n            `<div \nclass='c-card__image_embedded'` +\n            `style='padding-top: ${heightCoefficient ? 100 * heightCoefficient + '%' : '100%'};'></div></div>` +\n            `<div class='c-card__description'>` +\n            `<div class='c-card__name'>${card.name}</div></div></div>`\n        ).get(0);\n    };\n});\n"]}