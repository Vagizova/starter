{"version":3,"sources":["common.js"],"names":["$","getCards","ajax","url","type","done","cards","cardsPagesCount","assignId","cardsArray","length","concat","cardsLoader","masonry","masonryConfig","isMasonryCreated","newCards","map","card","createCard","append","reduceText","string","visibleSymbols","substring","setBorders","currentSlide","body","index","addClass","removeClass","lastIndex","id","heightCoefficient","imgHeight","imgWidth","img","name","lastName","description","get","itemSelector","columnWidth","percentPosition","slickConfig","dots","arrows","infinite","vertical","speed","fade","cssEase","bloggerConfig","slidesToShow","slidesToScroll","appendArrows","parents","nextArrow","prevArrow","dotsClass","animate","scrollTop","height","slick","click","window","on","event","container","currentContent","find","isScrolledUp","parseInt","originalEvent","wheelDelta","detail","heightDelta","Math","floor","topOffset","offset","top","document","preventDefault","currentSlideIdx","console","log"],"mappings":"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","file":"../sources/common.js","sourcesContent":["$(function() {\n    let isMasonryCreated = false;\n    let cardsLoader;\n    let cardsArray = [];\n    let masonryConfig = {\n        itemSelector: '.c-card',\n        columnWidth: '.c-card__sizer',\n        percentPosition: true,\n        // gutter: '.c-card__gutter'\n    };\n    let slickConfig = {\n        dots: false,\n        arrows: false,\n        infinite: false,\n        vertical: false,\n        speed: 800,\n        fade: true,\n        cssEase: 'linear'\n    };\n    let bloggerConfig = {\n        dots: true,\n        // centerMode: true,\n        arrows: true,\n        infinite: false,\n        vertical: false,\n        speed: 800,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        appendArrows: $('.c-bloggers-wrapper').parents('.c-section__content'),\n        nextArrow: '<div class=\"slick-next slick-arrow c-bloggers-wrapper__arrow c-bloggers-wrapper__next\"></div>',\n        prevArrow: '<div class=\"slick-prev slick-arrow c-bloggers-wrapper__arrow c-bloggers-wrapper__prev\"></div>',\n        dotsClass: 'slick-dots c-bloggers-wrapper__dots'\n    }\n    let cardsPagesCount = 1;\n\n    const visibleSymbols = 85;\n\n    // $('body').addClass('hidden-footer');\n    $('body').addClass('hidden-footer').animate({\n        scrollTop: $('.c-header').height()\n    }, 500);\n\n    $('.c-section-container').slick(slickConfig);\n    $('.c-bloggers-wrapper').slick(bloggerConfig);\n    getCards();\n    $('#more-cards').click(getCards);\n\n    // let previousWindowOffset = $(window).offset().top;\n    // console.log(previousWindowOffset);\n\n    $(window).on('mousewheel DOMMouseScroll MozMousePixelScroll', (event) => {\n        let container = $('.c-section-container');\n        let currentSlide = $('.c-section.slick-active');\n        let currentContent = currentSlide.find('.c-section__content');\n        let isScrolledUp = parseInt(event.originalEvent.wheelDelta || -event.originalEvent.detail) >= 0;\n        let heightDelta = Math.floor(currentContent.height() - currentSlide.height());\n        let topOffset = currentSlide.offset().top - $(document).scrollTop();\n        if (isScrolledUp) {\n            if (currentSlide.index() > 0) {\n                if (currentContent.offset().top == $('.c-header').height()) {\n                    event.preventDefault();\n                    let currentSlideIdx = container.slick('slickCurrentSlide');\n                    container.slick('slickGoTo', currentSlideIdx - 1);\n                }\n                if (currentSlide.index() == $('.c-section').length - 1) {\n                    if (topOffset == $('.c-footer').height() * -1) {\n                        $('body').animate({\n                            scrollTop: $(document).scrollTop() - $('.c-footer').height()\n                        }, 500);\n                    }\n                }\n            } else {\n                if (currentSlide.find('.c-section__box').scrollTop() <= 0) {\n                        event.preventDefault();\n                        $('body').animate({\n                            scrollTop: 0\n                        }, 500);\n                    }\n            }\n        } else {\n            if (topOffset > 0) {\n                event.preventDefault();\n                $('body').animate({\n                    scrollTop: $('.c-header').height()\n                }, 500);\n                return;\n            }\n            if (heightDelta <= currentSlide.find('.c-section__box').scrollTop() || heightDelta < 0) {\n                if (currentSlide.index() < $('.c-section').length) {\n                    let currentSlideIdx = container.slick('slickCurrentSlide');\n                    container.slick('slickGoTo', currentSlideIdx + 1);\n                }\n            } else {\n                if (currentSlide.index() == $('.c-section').length - 1) {\n                    console.log($('.c-footer').offset().top - $(window).scrollTop());\n                    // if (heightDelta - 1 <= currentSlide.find('.c-section__box').scrollTop()) {\n                    //     if (currentSlide.offset().top == $('.c-header').height()) {\n                    //         event.preventDefault();\n                    //         $('body').animate({\n                    //             scrollTop: $(document).scrollTop() + $('.c-footer').height()\n                    //         }, 500);\n                    //     }\n                    // }\n                };\n            }\n        }\n        setBorders($('.c-section.slick-active'));\n    });\n\n    function getCards() {\n        $.ajax({\n            url: 'http://127.0.0.1:3000/cards',\n            type: 'GET'\n        }).done((cards) => {\n            cardsPagesCount++;\n            cards = assignId(cards, cardsArray.length);\n            cardsArray = cardsArray.concat(cards);\n            if (cards.length > 0) {\n                cardsLoader = $('.c-cards-holder').masonry(masonryConfig);\n                isMasonryCreated = true;\n                let newCards = cards.map((card) => {\n                    return createCard(card);\n                });\n                cardsLoader.append(newCards).masonry('appended', newCards).masonry('reloadItems');\n            } else {\n                if (isMasonryCreated) {\n                    cardsLoader.masonry('destroy');\n                    isMasonryCreated = false;\n                }\n            }\n        })\n    }\n\n    function reduceText(string) {\n        if (string.length > visibleSymbols) {\n            string = string.substring(0, visibleSymbols) + ' ...';\n        }\n        return string;\n    }\n\n    function isHeaderVisible(currentSlide, topOffset) {\n        return currentSlide.index() == 0 && topOffset == $('.c-header').height();\n    }\n\n    function isFooterVisible(currentSlide, topOffset) {\n        return currentSlide.index() == $('.c-section').length - 1 && (-1 * topOffset) == $('.c-footer').height();\n    }\n\n    function setBorders(currentSlide) {\n        let body = $('body');\n        if (currentSlide.index() > 0) {\n            // body.addClass('hidden-header');\n            body.addClass('hidden-footer');\n            if (currentSlide.index() == $('.c-section').length - 1) {\n                body.removeClass('hidden-footer');\n            }\n        } else {\n            body.addClass('hidden-footer');\n            // body.removeClass('hidden-header');\n        }\n    }\n\n    function assignId(cards, lastIndex) {\n        return cards.map((card, index) => {\n            card.id = 'card-' + (lastIndex + index + 1);\n            return card;\n        })\n    }\n\n    function createCard(card) {\n        let heightCoefficient = card.imgHeight / card.imgWidth;\n        return $(\n            `<div class='c-card' id='${card.id}'>` +\n            `<div class='c-card__image'` +\n            `style='background-image: url(${card.img});'>` +\n            `<div class='c-card__image_embedded'` +\n            `style='padding-top: ${heightCoefficient ? 100 * heightCoefficient + '%' : '100%'};'></div></div>` +\n            `<div class='c-card__about'>` +\n            `<div class='c-card__name'>${card.name} <span class=\"c-card__last-name\">${card.lastName}</span></div>` +\n            `<div class=\"c-card__description\">${reduceText(card.description)}</div></div></div>`\n        ).get(0);\n    };\n});"]}